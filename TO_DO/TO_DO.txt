BEFORE PUSH:
[] delete .git for MLX42. For evaluation: MLX42 must be also pushed to intra

Nice to have
[:((] fix multiple sprites - I tried ...
[] crouch - change the height of the walls?
[] stop timer when in menu

[] add credits
[] write custom mlx_put_pixel
[] Memory leaks when exit with red cross (how to call free?), with ESC it is fine


[]  to Daniil: 
	[] add option for normal mode without time pressure
	[] extra_textures(t_game *game):
		//TODO: Daniil, do you need hier to print wall->width, wall->height
		printf("W:%d H:%d\n", wall->width, wall->height);
	[] 	//TODO: add check if cursor exist in free_mlx_img_txtr:
		mlx_delete_texture(game->textures.cursor);

12.04
[]TODO: add precheck  for player and precheck for lines

11.04
[x] much better check before savemap in array
	[x] check for valid first and last line
	[x]	check if exact 1 player with allowed directiona
	[x] empty count_lines
	[x] not allowed symbols
	[x] '0' with spaces
	[x] finding first and last line
	[] adjust finding max line in map  for memory allocation
	[] check lines outside walls
	[] check player outside map or false position

Check after save:
// TODO:ADD CHECK for spaces with 0
//TODO: adjust finding max line (skippping spaces from right)
[] check players position y+1 and y-1
[] check player surrounded by spaces
[] changed function for save player,
[] add check for walls after save to saved_map


10.04
[x] change save_map_info_in_struct with multiple while()
[x] added: skipping spaces between map info and map

09.04
[x]	added check for map file before save in **saved_map
[x] map is now saved in **saved_map

08.04
[x] start from beginn to change parsing
[x] for map_error_exit added in map_struct fd and fd_open, to close before exit

05.04
[x]	find map in saved mapfile, check
[x]	exract map from map file and save back to saved_mp in struct map
[x] after saving textures and colours from saved_map in struct => delete this information from saved_map

04.04
[x] change map_file_allocate_memory( ) to clean memory with free_double_array()
[x] map_file_read_save() add fill with spaces line till map->cols
[x] found and fixed sgv with free_double_map

03.04
[x] new function free_game
[x] new function free_map_struct and added to free_game instead of free_double_array
[x]  error_map_exit_game: normal free game and map in (void)game;     
[x] changed all "else if statements"  to "if statements" for each member of the struct:
	there's a logical issue in the code:
	 if one of the texture pointers (no_texture, so_texture, we_texture, or ea_texture) is allocated,
	then it will be freed, but the subsequent conditions  will still be evaluated,
	leading to potential double-freeing or accessing memory that has already been freed.
[x] added check if no map_information
[x] map_info_colors: add check if:
	if exact 3 colors, if only digits, if only 2 ",", if positiv values, if 0-255
[x] add conversion from color string in struct to uint
[x] draw_floor_ceiling(t_game *game, int x): get colours from map struct, after reading from map.cub
[x] load_textures(t_game *game):  get textures from map struct, after reading from map.cub

02.04
[x] added: check and save wall_path in struct(in map_visuals.c)
[x] added: check and save colors in struct(in map_visuals.c)

01.04
[x] checked game on school Computer
[x] added minimum posible size for map.cub
[x] moved init_map and init_player from init_game struct(to not open game window for incorrect input)
[x] added uint32_t	values in struct  for color cailing and floor, renamed *char colors
[x] continue work on searching and saving  wall_path (in map_visuals.c)

31.03
[x] renamed wall_textures in file_names and in function to understandble names (from 1,2 to north, south..)
[x] added our game_wall_textures in map.cub
[x] add check file_extention and if not empty file for load textures
[x] change load wall structures from struct textures in function "load_textures(t_game *game)"
[x] start work on checking wall_path and files

29.03
[x] solved mistake in .gitignore, that files were not pushed
[x] checked with vagrind: check arguments,  check map file(.cub, open)

28.03
[x] Makefiles(libft,libgnl,cub3D: added for debug -g to CFLAGS
[x] check arguments,  check map file(.cub, open)

24.03
[x] now textures do not have to be the same size (we take their size from them) 
	no more #define IMAGE_WIDTH, #define SPRITE_WIDTH

18.03
[x] ALL norminette fixed
[x] split minimap and bigmap

16.03
[x] now game is way faster
[x] I optimized the code by removing unneccesary things  (on the 4 floor game is very slow!)

14.03
[x] Win the game
[x] Add game over music and improve game over
[x] mandatory part deleted, will do it at the end
[x] EXIT without memory leaks (seems no leaks, but double check!)
[x] All possibly lost leaks fixed
[x] fixed alena's memory errors in map save

13.03
[x] fix image mirroring
[x] door opening is broken
[x] player move in the wrong direction on minimap
[x] Everything appears to be not in the right direction
[x] Added win image
[x] fixed wall opening
[x] segfault when move to the wall right after start
[x] improve wall collision

12.03
[x] lower picture resolution from 1024 to 512
[x] Added noooo sound at the end and hello there at the begging
[x] open the big map when m is pressed
[x] improve minimap (player is always in the middle)
[x] draw minimap
[x] Kill music process after end
[x] Add button sound
[x] Add background music

11.03
[x] Add music (I found a way using system("aplay ./path"))
[x] change cursor after explosion
[x] shitty ship explosion (game over)
[x] timer before explosion
[x] pause menu
[x] change speed in settings
[x] settings menu
[x] almost all norminette (variables renamed to snake format)

10.03
[x] norminette
[x] split mandatory and bonus part
[x] added sprite animation
[x] movement is more smooth(key press is now handled in loop hook, not in key hook)
[x] door opening improved

09.03
[x] raycasting split into multiple files
[x] norminette
[x] Added lightsaber
[x] Display door and open it (animation?)
[x] Added c3po sprite

08.03
[x] added message from C3PO
[x] added custom cursor
[x] removed for loops from raycasting
[x] Added sprites.c file for drawing sprites
[x] Sprites implemented
[x] Added floor_ceiling.c file for drawing floor and ceiling
[x] Working play button in the main menu
[x] Mouse rotation improved
[x] Added new mouse.c file for mouse functions

07.03
[x] check player in map
[x] save player in  struct player 
[x] Added main menu image (click with mouse to close it)
[x] improve mouse rotation (rotate even when mouse is not moving)
[x] rotate player with mouse
[x] moved textures to new folder
[x] changed absolute path to relative path to textures.png inf init_game_struct()
[x] libft must compile with cc, not gcc
[x] moved all init_ft to new created init_game.c
[x] A,D keys to go left and right
[x] -> and <- move the view
[x] split key_press
[x] ESC key
[x] fix wall collision

06.03
[x] start thinking about main GAME_CONCEPT/IDEA
[x] basic wall collision
[x] high resolution images 1024 pixels
[x] N, S, E, W images logic
[x] Ceiling and floor images
[x] raycasting with png images :)))))))))
[ ] Map from subject with  upper information with textures and  colors:
	[] parse input in TEXTURES (NO,SO,WE,EA)|COLORS|MAP
	[] save information in struct
	[] check if colors for cieling and floor are correct
	[] convert colors for cieling and floor

05.03
[x] added  get_next_line library to project and Makefile
[x] organize programm function in separate files.c 
[x] check  programm input 
[x] check input file 
[x] correctly save only MAP, without information with textures and  colors  
[x] split DDA algoritmh
[x] render real map
[x] raycasting with generated textures

04.03
[x] Basic untextured raycasting :))))))))))
[x] player movement up and down
[x] player rotation

03.03
[x]  start programming (implementation Raycasting)
[x]  start to learn about DDA and Raycasting
[] Start reading about Raycasting
	[x] https://www.youtube.com/watch?v=NbSee-XM7WA
	[x] Lode's Computer Graphics Tutorial: https://lodev.org/cgtutor/raycasting.html
	[] Raycasting II: Floor and Ceiling: https://lodev.org/cgtutor/raycasting2.html 
	[] Raycasting III: Sprites: https://lodev.org/cgtutor/raycasting3.html 

1.03 START PROJECT CUB3D :) GOOD LUCK!
[x] read project subject
[x] create github CUB3D project
[x] create TO_DO folder with TO_DO list 
[x] create main, .h, add  MAkefile, libft
[x] add map from subject
